<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Report">

	<resultMap id="reportMap" type="kr.freedi.dev.qreport.domain.ReportVO">		
		<result property="repCode" column="REP_CODE" />
		<result property="repName" column="REP_NAME" />
		<result property="repMenuCode" column="REP_MENU_CODE" />
		<result property="repDivisionCode" column="REP_DEVISION_CODE" />
		<result property="repTypeCode" column="REP_TYPE_CODE" />
		<result property="repSectorCode" column="REP_SECTOR_CODE" />
		<result property="repProductClass" column="REP_PRODUCT_CLASS" />
		<result property="repLeaderBeltCode" column="REP_LEADER_BELT_CODE" />
		<result property="repActionTypeCode" column="REP_ACTION_TYPE_CODE" />
		<result property="repMbbUseRateCode" column="REP_MBB_USE_RATE_CODE" />
		<result property="repUseRefDate" column="REP_USE_REF_DATE" />
		<result property="repStatusCode" column="REP_STATUS_CODE" />
		<!-- <result property="repSixMeasureDate" column="REP_SIX_MEASUER_DATE" />
		<result property="repSixExploreDate" column="REP_SIX_EXPLORE_DATE" />
		<result property="repSixDevelopDate" column="REP_SIX_DEVELOP_DATE" />
		<result property="repSixImplementDate" column="REP_SIX_IMPLEMENT_DATE" /> -->
		<result property="repStartDate" column="REP_START_DATE" />
		<result property="repFinishDate" column="REP_FINISH_DATE" />
		<result property="repKeyword" column="REP_KEYWORD" />
		<result property="repRegUser" column="REP_REG_USER" />
		<result property="repRegDate" column="REP_REG_DATE" />
		<result property="repUpdateUser" column="REP_UPDATE_USER" />
		<result property="repUpdateDate" column="REP_UPDATE_DATE" />
		<result property="repApprovalCode" column="REP_APPROVAL_CODE" />
		<result property="repUseYn" column="REP_USE_YN" />
		<result property="repMailSendYn" column="REP_MAIL_SEND_YN" />
		<result property="repMailSendDate" column="REP_MAIL_SEND_DATE" />
		<result property="repPlaceCode" column="REP_PLACE_CODE" />
		<result property="repLeaderCode" column="REP_LEADER_CODE" />
		<result property="repFileYn" column="REP_FILE_YN" />

		<result property="idx" column="IDX" />
		<result property="repDivision" column="REP_DEVISION" />
		<result property="repType" column="REP_TYPE" />
		<result property="repStatus" column="REP_STATUS" />
		<result property="repSector" column="REP_SECTOR" />
		
		<result property="repTeamLeaderName" column="REP_TEAM_LEADER_NAME" />
		<result property="repTeamMemberName" column="REP_TEAM_MEMBER_NAME" />
		<result property="repTeamProcessOwnerName" column="REP_TEAM_PROCESS_OWNER_NAME" />
		<result property="repTeamChapionName" column="REP_TEAM_CHAMPION_NAME" />
		
	</resultMap>
	
	<sql id="defCond">
			<if test="searchRepName != null and searchRepName != ''">
				AND T.REP_NAME like '%' || #{searchRepName} || '%'
			</if>
			<if test="searchDivision != null and searchDivision != ''">
				AND T.REP_DEVISION_CODE = #{searchDivision}
			</if>
			<if test="searchType != null and searchType != ''">
				AND T.REP_TYPE_CODE = #{searchType}
			</if>
			<if test="searchStatus != null and searchStatus != ''">
				AND T.REP_STATUS_CODE = #{searchStatus}
			</if>
			<if test="menuCode != null and menuCode != ''">
				AND T.REP_MENU_CODE = #{menuCode}
			</if>
			<if test="searchUserid != null and searchUserid != ''">
				AND T.REP_REG_USER = #{searchUserid}
			</if>
			
			
			<if test="searchSectorCode != null and searchSectorCode != ''">
				AND T.REP_SECTOR_CODE = #{searchSectorCode}
			</if>
			<if test="searchPlaceCode != null and searchPlaceCode != ''">
				AND T.REP_PLACE_CODE = #{searchPlaceCode}
			</if>
			<if test="searchUserid != null and searchUserid != ''">
				AND T.REP_REG_USER = #{searchUserid}
			</if>
			<if test="searchActionTypeCode != null and searchActionTypeCode != ''">
				AND T.REP_ACTION_TYPE_CODE = #{searchActionTypeCode}
			</if>
			<if test="searchLeaderBeltCode != null and searchLeaderBeltCode != ''">
				AND T.REP_LEADER_BELT_CODE = #{searchLeaderBeltCode}
			</if>
			
			<if test="searchFromDt != null and searchFromDt != ''">
				AND d.start_date(+) > to_date(#{searchFromDt}, 'YYYY-MM-DD')
			</if>
			
			<if test="searchToDt != null and searchToDt != ''">
				AND D.end_date = to_date(#{searchToDt}, 'YYYY-MM-DD')
			</if>
			
	</sql> 
	
	<sql id="selectListBasic">
	    WITH report_mst AS (
            SELECT ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.rep_code) ASC ) idx,
                ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.rep_code) DESC ) rowidx,
                T.*
            FROM   tb_report_mst T
                   , (select rep_code, min(rep_plan_start_date) start_date
                             , (case when rep_devision_code='1' then max(REP_PLAN_START_DATE) else max(REP_PLAN_END_DATE) end) as end_date
                        from tb_report_detail 
                       group by rep_code, rep_devision_code) d
            WHERE t.rep_code=d.rep_code(+)
            <include refid="defCond"></include>
        )
        SELECT
            idx,
            t.rep_code,
            t.rep_name,
            t.rep_devision_code,
            c_div.code_nm AS rep_division,
            t.rep_type_code,
            c_ty.code_nm  AS rep_type,
            t.rep_status_code,
            c_st.code_nm  AS rep_status,
            (select min(REP_PLAN_START_DATE) from tb_report_detail m where m.rep_code=t.rep_code) rep_start_date,
            (select case when rep_devision_code='1' then max(REP_PLAN_START_DATE) else max(REP_PLAN_END_DATE) end as rep_finish_date from tb_report_detail m where m.rep_code=T.rep_code group by rep_code, m.rep_devision_code) rep_finish_date
            
        FROM
            report_mst T,
            tb_code    c_div,
            tb_code    c_ty,
            tb_code    c_st
        WHERE   
                T.rep_devision_code = c_div.code_id(+) 	AND c_div.code_grp_id(+) = '6SIG_YN' 
            AND T.rep_type_code = c_ty.code_id(+) 		AND c_ty.code_grp_id(+) IN ('RP_TY1', 'RP_TY2', 'RP_TY3')
            AND T.rep_status_code = c_st.code_id(+) 	AND c_st.code_grp_id(+) = 'REP_STAT'
            
	</sql>
	
	<select id="selectList" resultMap="reportMap">
		<include refid="selectListBasic"></include>
		  and rowidx between (#{currentPageNo}*#{recordCountPerPage}+1-#{recordCountPerPage}) and (#{currentPageNo}*#{recordCountPerPage})
		  order by idx desc
	</select>
	
	
	<sql id="selectFullListBasic">
		WITH report_mst AS (
            SELECT ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.rep_code) ASC ) idx,
                ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.rep_code) DESC ) rowidx,
                T.*
            FROM   tb_report_mst T
                   , (select rep_code, min(rep_plan_start_date) start_date
                             , (case when rep_devision_code='1' then max(REP_PLAN_START_DATE) else max(REP_PLAN_END_DATE) end) as end_date
                        from tb_report_detail 
                       group by rep_code, rep_devision_code) d
            WHERE t.rep_code=d.rep_code(+)
            <include refid="defCond"></include>
        )
        SELECT
            idx
            ,t.rep_code
            ,t.rep_name
            ,t.rep_devision_code
            ,c_div.code_nm AS rep_division
            ,t.rep_type_code
            ,c_ty.code_nm  AS rep_type
            ,t.rep_status_code
            ,c_st.code_nm  AS rep_status
            ,(select min(REP_PLAN_START_DATE) from tb_report_detail m where m.rep_code=t.rep_code) rep_start_date
            ,(select case when rep_devision_code='1' then max(REP_PLAN_START_DATE) else max(REP_PLAN_END_DATE) end as rep_finish_date from tb_report_detail m where m.rep_code=T.rep_code group by rep_code, m.rep_devision_code) rep_finish_date
            ,(select code_nm from tb_code where code_grp_id='ACTTYPE' and code_id=t.REP_ACTION_TYPE_CODE) as REP_ACTION_TYPE
            ,(select code_nm from tb_code where code_grp_id='MBBUSERT' and code_id=t.REP_MBB_USE_RATE_CODE) as REP_MBB_USE_RATE
            ,(select code_nm from tb_code where code_grp_id='SECTOR' and code_id=t.REP_SECTOR_CODE) as REP_SECTOR
            ,(select rep_team_mem_name from tb_report_team where rep_code=t.REP_CODE and rep_team_mem_role='1') REP_TEAM_LEADER_NAME
            ,(select LISTAGG(cast(rep_team_mem_name as varchar(100)), ',') WITHIN GROUP(ORDER BY REP_TEAM_CODE) from tb_report_team where rep_code=t.REP_CODE and rep_team_mem_role='2') as REP_TEAM_MEMBER_NAME
            ,(select rep_team_mem_name from tb_report_team where rep_code=t.REP_CODE and rep_team_mem_role='4') REP_TEAM_PROCESS_OWNER_NAME
            ,(select rep_team_mem_name from tb_report_team where rep_code=t.REP_CODE and rep_team_mem_role='5') REP_TEAM_CHAMPION_NAME
            
        FROM
            report_mst T,
            tb_code    c_div,
            tb_code    c_ty,
            tb_code    c_st
        WHERE   
                T.rep_devision_code = c_div.code_id(+) 	AND c_div.code_grp_id(+) = '6SIG_YN' 
            AND T.rep_type_code = c_ty.code_id(+) 		AND c_ty.code_grp_id(+) IN ('RP_TY1', 'RP_TY2', 'RP_TY3')
            AND T.rep_status_code = c_st.code_id(+) 	AND c_st.code_grp_id(+) = 'REP_STAT'
           
	</sql>
		    
	<select id="selectFullList" resultMap="reportMap">
		<include refid="selectFullListBasic"></include>
			and rowidx between (#{currentPageNo}*#{recordCountPerPage}+1-#{recordCountPerPage}) and (#{currentPageNo}*#{recordCountPerPage})
		    order by idx desc
	</select>
	
	<select id="selectFullListCount" resultType="egovMap">
		
		SELECT c.code_id rep_devision_code, c.code_nm rep_division, COUNT(a.rep_code) cnt
          FROM tb_code c,
		      (
		<include refid="selectFullListBasic"></include>
		       ) a
		 WHERE c.code_id=a.rep_devision_code(+)
		   AND c.code_grp_id='6SIG_YN'
	  GROUP BY code_id, code_nm
	  ORDER BY rep_devision_code
				 
	 </select>
	
	<select id="selectListCount2" resultType="egovMap">
		SELECT
		    c.code_id repStatusCode, c.code_nm repStatus, nvl(m.cnt, 0) AS cnt
		FROM tb_code c,
		     (
		        SELECT
		            rep_status_code, rep_status, COUNT(1) cnt
		        FROM (
					<include refid="selectListBasic"></include>
					 ) a
		        GROUP BY a.rep_status_code, a.rep_status
		    ) m
		WHERE c.code_id = m.rep_status_code (+)
		  AND c.code_grp_id = 'REP_STAT'
		  AND c.act_flg = 'Y'
      ORDER BY c.code_id		 
	 </select>
	
	<select id="selectListCount" resultType="int">
		SELECT COUNT(*) FROM tb_report_mst T 
		<include refid="defCond"></include>
	</select>
	
	<select id="selectNextFkey" resultType="int">
		SELECT MAX(TO_NUMBER(NVL(REP_CODE, 0))) + 1 REP_CODE FROM TB_REPORT_MST
	</select>
	
	<insert id="insert">
		INSERT INTO TB_REPORT_MST (
			REP_CODE
			, REP_NAME
			, REP_MENU_CODE
			, REP_DEVISION_CODE
			, REP_TYPE_CODE
			, REP_SECTOR_CODE
			, REP_PRODUCT_CLASS
			, REP_LEADER_BELT_CODE
			, REP_ACTION_TYPE_CODE
			, REP_MBB_USE_RATE_CODE
			, REP_USE_REF_DATE
			, REP_STATUS_CODE
			
			, REP_KEYWORD
			, REP_REG_USER
			, REP_REG_DATE
			, REP_APPROVAL_CODE
			, REP_USE_YN
			, REP_MAIL_SEND_YN
			, REP_MAIL_SEND_DATE
			, REP_PLACE_CODE
			, REP_LEADER_CODE
			, REP_FILE_YN
		) VALUES (
			#{repCode} 
			,#{repName} 
			,#{repMenuCode} 
			,#{repDivisionCode} 
			,#{repTypeCode} 
			,#{repSectorCode} 
			,#{repProductClass} 
			,#{repLeaderBeltCode} 
			,#{repActionTypeCode} 
			,#{repMbbUseRateCode} 
			,to_date(#{repUseRefDate}, 'YYYY') 
			,#{repStatusCode} 
			 
			,#{repKeyword} 
			,#{repRegUser}
			, sysdate 
			,#{repApprovalCode} 
			,#{repUseYn} 
			,#{repMailSendYn} 
			,#{repMailSendDate} 
			,#{repPlaceCode} 
			,#{repLeaderCode} 
			,#{repFileYn} 
		)
	</insert>
	
	<update id="update">
	
		UPDATE TB_REPORT_MST SET 
			REP_NAME = #{repName} 
			, REP_DEVISION_CODE = #{repDivisionCode} 
			, REP_TYPE_CODE = #{repTypeCode} 
			, REP_SECTOR_CODE = #{repSectorCode} 
			, REP_PRODUCT_CLASS = #{repProductClass} 
			, REP_LEADER_BELT_CODE = #{repLeaderBeltCode} 
			, REP_ACTION_TYPE_CODE = #{repActionTypeCode} 
			, REP_MBB_USE_RATE_CODE = #{repMbbUseRateCode}
			, REP_USE_REF_DATE = #{repUseRefDate} 
			, REP_STATUS_CODE = #{repStatusCode} 
 
			, REP_KEYWORD = #{repKeyword} 
			, REP_UPDATE_USER = #{repRegUser} 
			, REP_UPDATE_DATE = sysdate
			, REP_APPROVAL_CODE = #{repApprovalCode} 
			, REP_USE_YN = #{repUseYn} 
			, REP_MAIL_SEND_YN = #{repMailSendYn} 
			, REP_MAIL_SEND_DATE = #{repMailSendDate} 
			, REP_PLACE_CODE = #{repPlaceCode} 
			, REP_LEADER_CODE = #{repLeaderCode} 
			, REP_FILE_YN = #{repFileYn} 
		WHERE
		REP_CODE = #{repCode}
	</update>
	
	<select id="select" resultMap="reportMap">
		SELECT 
			T.REP_CODE
			, T.REP_NAME
			, T.REP_MENU_CODE
			, T.REP_DEVISION_CODE
			, c_div.code_nm as REP_DIVISION
			, T.REP_TYPE_CODE
			, c_ty.code_nm as REP_TYPE
			, T.REP_SECTOR_CODE
			, c_sect.code_nm rep_sector
			, T.REP_PRODUCT_CLASS
			, T.REP_LEADER_BELT_CODE
            , c_belt.code_nm REP_LEADER_BELT
			, T.REP_ACTION_TYPE_CODE
            , c_act.code_nm REP_ACTION_TYPE
			, T.REP_MBB_USE_RATE_CODE
            , c_mbbr.code_nm REP_MBB_USE_RATE
			, T.REP_USE_REF_DATE
			, T.REP_STATUS_CODE
			, T.REP_KEYWORD
			, T.REP_REG_USER
			, T.REP_REG_DATE
			, T.REP_UPDATE_USER
			, T.REP_UPDATE_DATE
			, T.REP_APPROVAL_CODE
			, T.REP_USE_YN
			, T.REP_MAIL_SEND_YN
			, T.REP_MAIL_SEND_DATE
			, T.REP_PLACE_CODE
			, T.REP_LEADER_CODE
			, T.REP_FILE_YN
		FROM TB_REPORT_MST T,
            tb_code    c_div,
            tb_code    c_ty,
            tb_code    c_sect,
            tb_code    c_st,
            tb_code    c_belt,
            tb_code    c_act,
            tb_code    c_mbbr
        WHERE   
                T.rep_devision_code = c_div.code_id(+) 		AND c_div.code_grp_id(+) = '6SIG_YN' 
            AND T.rep_type_code = c_ty.code_id(+) 			AND c_ty.code_grp_id(+) IN ('RP_TY1', 'RP_TY2', 'RP_TY3')
            AND T.rep_status_code = c_st.code_id(+) 		AND c_st.code_grp_id(+) = 'REP_STAT'
            AND T.REP_SECTOR_CODE = c_sect.code_id(+) 		AND c_sect.code_grp_id(+) = 'SECTOR'
            AND T.REP_LEADER_BELT_CODE = c_belt.code_id(+) 	AND c_belt.code_grp_id(+) = 'LDRBELT'
            AND T.REP_ACTION_TYPE_CODE = c_act.code_id(+) 	AND c_act.code_grp_id(+) = 'ACTTYPE'
            AND T.REP_MBB_USE_RATE_CODE = c_mbbr.code_id(+) AND c_mbbr.code_grp_id(+) = 'MBBUSERT'
		    AND T.REP_CODE = #{repCode}
	</select>
	
	<!-- <sql id="defCond">
		<where>
			<trim prefixOverrides="AND|OR">
				T.NOTICE_FLG = 'N'
				<if test="boardKey != null and boardKey != ''">
					AND T.BOARD_KEY = #{boardKey}
				</if>
				<if test="searchViewPrdFlg != null and searchViewPrdFlg != ''">
					AND (VIEW_START_DT IS NULL OR VIEW_START_DT <![CDATA[<]]> SYSDATE)
					AND (VIEW_END_DT IS NULL OR VIEW_END_DT <![CDATA[>]]> SYSDATE)
				</if>
				<if test="searchStartFrstOperDt != null and searchStartFrstOperDt != ''">
					AND T.FRST_OPER_DT <![CDATA[>=]]> #{searchStartFrstOperDt}
				</if>
				<if test="searchEndFrstOperDt != null and searchEndFrstOperDt != ''">
					AND T.FRST_OPER_DT <![CDATA[<=]]> TO_DATE(#{searchEndFrstOperDt}, 'YYYY-MM-DD') + 1
				</if>
				<if test="searchCatgr != null and searchCatgr != ''">
					AND T.CATGR = #{searchCatgr}
				</if>
				<if test="searchDeleteFlg != null and searchDeleteFlg != ''">
					AND T.DELETE_FLG = #{searchDeleteFlg}
				</if>
				<if test="searchClass != null and searchClass != ''">
					<if test="searchValue != null and searchValue != ''">
						AND 
						<trim prefixOverrides="AND">
							<choose>
								<when test="searchClass == 'TITLE'.toString()">
									<foreach collection="searchItrValue" index="i" item="item" open="(" close=")" separator=" ">
										<if test="i != 0">AND </if> T.TITLE LIKE '%' || #{item} || '%'
									</foreach>
								</when>
								<when test="searchClass == 'CONTENT'.toString()">
									<foreach collection="searchItrValue" index="i" item="item" open="(" close=")" separator=" ">
										<if test="i != 0">AND </if> T.CONTENT LIKE '%' || #{item} || '%'
									</foreach>
								</when>
								<when test="searchClass == 'WRITER'.toString()">
									T.WRITER LIKE '%' || #{searchValue} || '%'
								</when>
								<otherwise></otherwise>
							</choose>
						</trim>
					</if>			
				</if>
			</trim>
		</where>
	</sql> 

    <sql id="fullCond">
		<where>
			<trim prefixOverrides="AND|OR">
				<if test="boardKey != null and boardKey != ''">
					AND T.BOARD_KEY = #{boardKey}
				</if>
				<if test="noticeFlg != null and noticeFlg != ''">
					AND T.NOTICE_FLG = #{noticeFlg}
				</if>
				<if test="deleteFlg != null and deleteFlg != ''">
					AND T.DELETE_FLG = #{deleteFlg}
				</if>
				<if test="viewStartDt != null and viewStartDt != ''">
					AND (VIEW_START_DT IS NULL OR VIEW_START_DT <![CDATA[<]]> SYSDATE)
				</if>
				<if test="viewEndDt != null and viewEndDt != ''">
					AND (VIEW_END_DT IS NULL OR VIEW_END_DT <![CDATA[>]]> SYSDATE)
				</if>
			</trim>
		</where>
	</sql>

	<select id="selectListCount" resultType="int">
		SELECT COUNT(*) FROM TB_ARTICLE T 
		<include refid="defCond"></include>
	</select>

	<select id="selectList" resultMap="articleMap">
	select *
	  from (
		SELECT
			row_number() over ( 
			<choose>
				<when test="orderByTyp != null and orderByTyp != ''">
					<choose>
						<when test="orderByTyp == 'RECENTLY'.toString()">
							ORDER BY FRST_OPER_DT DESC
						</when>
						<when test="orderByTyp == 'HIERARCHY'.toString()">
							ORDER BY FKEY DESC, OKEY ASC
						</when>
						<otherwise>
							ORDER BY FRST_OPER_DT DESC
						</otherwise>
					</choose>
				</when>
				<otherwise>
					ORDER BY FRST_OPER_DT DESC
				</otherwise>
			</choose>
			) num 
			,T.ARTICLE_KEY
			,T.BOARD_KEY
			,T.FKEY
			,T.PKEY
			,T.OKEY
			,T.GKEY
			,T.CATGR
			,T.TITLE
			,T.CONTENT
			,T.WRITER
			,T.WRITER_PWD
			,T.NOTICE_FLG
			,T.SECRET_FLG
			,T.VIEW_START_DT
			,T.VIEW_END_DT
			,T.DELETE_TYP
			,T.DELETE_FLG
			,T.VIEW_CNT
			,T.MOVE_FLG
			,T.MOVE_DT
			,T.ORGNL_BOARD_KEY
			,T.FRST_OPER_ID
			,T.FRST_OPER_DT
			,T.FRST_OPER_IP
			,T.LAST_OPER_ID
			,T.LAST_OPER_DT
			,T.LAST_OPER_IP
			,ROUND(SYSDATE - T.FRST_OPER_DT, 0) OPER_PRD
		FROM TB_ARTICLE T
		<include refid="defCond"></include>
		<choose>
			<when test="orderByTyp != null and orderByTyp != ''">
				<choose>
					<when test="orderByTyp == 'RECENTLY'.toString()">
						ORDER BY FRST_OPER_DT DESC
					</when>
					<when test="orderByTyp == 'HIERARCHY'.toString()">
						ORDER BY FKEY DESC, OKEY ASC
					</when>
					<otherwise>
						ORDER BY FRST_OPER_DT DESC
					</otherwise>
				</choose>
			</when>
			<otherwise>
				ORDER BY FRST_OPER_DT DESC
			</otherwise>
		</choose>
			) where num between #{firstRecordIndex} and  #{recordCountPerPage}
	</select>

	<select id="selectFullList" resultMap="articleMap">
		SELECT
			T.ARTICLE_KEY
			,T.BOARD_KEY
			,T.FKEY
			,T.PKEY
			,T.OKEY
			,T.GKEY
			,T.CATGR
			,T.TITLE
			,T.CONTENT
			,T.WRITER
			,T.WRITER_PWD
			,T.NOTICE_FLG
			,T.SECRET_FLG
			,T.VIEW_START_DT
			,T.VIEW_END_DT
			,T.DELETE_TYP
			,T.DELETE_FLG
			,T.VIEW_CNT
			,T.MOVE_FLG
			,T.MOVE_DT
			,T.ORGNL_BOARD_KEY
			,T.FRST_OPER_ID
			,T.FRST_OPER_DT
			,T.FRST_OPER_IP
			,T.LAST_OPER_ID
			,T.LAST_OPER_DT
			,T.LAST_OPER_IP
			,ROUND(SYSDATE - T.FRST_OPER_DT, 0) OPER_PRD
		FROM TB_ARTICLE T
		<include refid="fullCond"></include>
		ORDER BY T.FRST_OPER_DT DESC
	</select>

	<select id="selectRecentList" resultMap="articleMap">
	
	select *
	  from (
		SELECT
			row_number() over (ORDER BY FKEY DESC, OKEY ASC) as num
			,T.ARTICLE_KEY
			,T.BOARD_KEY
			,T.FKEY
			,T.PKEY
			,T.OKEY
			,T.GKEY
			,T.CATGR
			,T.TITLE
			,T.CONTENT
			,T.WRITER
			,T.WRITER_PWD
			,T.NOTICE_FLG
			,T.SECRET_FLG
			,T.VIEW_START_DT
			,T.VIEW_END_DT
			,T.DELETE_TYP
			,T.DELETE_FLG
			,T.VIEW_CNT
			,T.MOVE_FLG
			,T.MOVE_DT
			,T.ORGNL_BOARD_KEY
			,T.FRST_OPER_ID
			,T.FRST_OPER_DT
			,T.FRST_OPER_IP
			,T.LAST_OPER_ID
			,T.LAST_OPER_DT
			,T.LAST_OPER_IP
			,ROUND(SYSDATE - T.FRST_OPER_DT, 0) OPER_PRD
		FROM TB_ARTICLE T
		WHERE T.BOARD_KEY = #{boardKey}
		AND T.NOTICE_FLG = 'N'
		AND T.DELETE_FLG = 'N'
		AND T.SECRET_FLG = 'N'
		AND (VIEW_START_DT IS NULL OR VIEW_START_DT <![CDATA[<]]> SYSDATE)
		AND (VIEW_END_DT IS NULL OR VIEW_END_DT <![CDATA[>]]> SYSDATE)
		AND PKEY = 0
		ORDER BY FKEY DESC, OKEY ASC
	) where num between #{firstRecordIndex} and #{recordCountPerPage} 
	
	</select>
	
	<select id="selectNextFkey" resultType="int">
		SELECT NVL(MAX(FKEY), 0) + 1 fkey FROM TB_ARTICLE
	</select>
		
	<select id="select" resultMap="articleMap">
		SELECT 
			T.ARTICLE_KEY articleKey
			,T.BOARD_KEY
			,T.FKEY
			,T.PKEY
			,T.OKEY
			,T.GKEY
			,T.CATGR
			,T.TITLE
			,T.CONTENT
			,T.WRITER
			,T.WRITER_PWD
			,T.NOTICE_FLG
			,T.SECRET_FLG
			,T.VIEW_START_DT
			,T.VIEW_END_DT
			,T.DELETE_TYP
			,T.DELETE_FLG
			,T.VIEW_CNT
			,T.MOVE_FLG
			,T.MOVE_DT
			,T.ORGNL_BOARD_KEY
			,T.FRST_OPER_ID
			,T.FRST_OPER_DT
			,T.FRST_OPER_IP
			,T.LAST_OPER_ID
			,T.LAST_OPER_DT
			,T.LAST_OPER_IP
			,ROUND(SYSDATE - T.FRST_OPER_DT, 0) OPER_PRD
		FROM TB_ARTICLE T 
		WHERE T.ARTICLE_KEY = #{articleKey}
	</select>

	<

	<update id="update">
		UPDATE TB_ARTICLE SET 
			CATGR = #{catgr}
			,TITLE = #{title}
			,CONTENT = #{content}
			,WRITER = #{writer}
			,WRITER_PWD = #{writerPwd}
			,NOTICE_FLG = #{noticeFlg}
			
			,SECRET_FLG = #{secretFlg}
			,VIEW_START_DT = #{viewStartDt}
			,VIEW_END_DT = #{viewEndDt}
			
			,LAST_OPER_ID = #{lastOperId}
			,LAST_OPER_DT = SYSDATE
			,LAST_OPER_IP = #{lastOperIp}
		WHERE
		ARTICLE_KEY = #{articleKey}
	</update>

	<delete id="delete">
		DELETE FROM TB_ARTICLE WHERE ARTICLE_KEY = #{articleKey}
	</delete>
	
	
	<update id="updateViewCnt">
		UPDATE TB_ARTICLE 
		SET VIEW_CNT = VIEW_CNT + 1 
		WHERE ARTICLE_KEY = #{articleKey}
	</update>

	<select id="selectChildList" resultMap="articleMap">
		 SELECT * FROM TB_ARTICLE WHERE PKEY = #{articleKey} ORDER BY OKEY
	</select>
	
	<select id="selectByMaxOkey" resultMap="articleMap">
		SELECT * FROM (
			SELECT * FROM TB_ARTICLE
			WHERE PKEY = #{pkey}
			ORDER BY OKEY DESC
		)T
		where rownum<![CDATA[<=]]>1
	</select>
	
	<update id="updateOkey">
		UPDATE TB_ARTICLE 
		SET OKEY = OKEY + 1
		WHERE FKEY = #{fkey} AND OKEY <![CDATA[>=]]> #{okey}
	</update>
	
	<update id="disable">
		UPDATE TB_ARTICLE SET 
			DELETE_FLG = 'Y'
			,DELETE_TYP = #{deleteTyp}
			,LAST_OPER_ID = #{lastOperId}
			,LAST_OPER_DT = SYSDATE
			,LAST_OPER_IP = #{lastOperIp}
		WHERE ARTICLE_KEY = #{articleKey}
	</update>

	<update id="recovery">
		UPDATE TB_ARTICLE SET 
			DELETE_FLG = 'N' 
			,DELETE_TYP = #{deleteTyp}
			,LAST_OPER_ID = #{lastOperId}
			,LAST_OPER_DT = SYSDATE
			,LAST_OPER_IP = #{lastOperIp}
		WHERE ARTICLE_KEY = #{articleKey}
	</update>
	
	<update id="move">
		UPDATE TB_ARTICLE SET
			BOARD_KEY = #{newBoardKey},
			MOVE_FLG = 'Y',
			ORGNL_BOARD_KEY = #{oldBoardKey},
			LAST_OPER_DT = SYSDATE
		WHERE FKEY = #{fkey}
	</update> -->
</mapper>

