<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EvalProposal">
	<resultMap type="kr.freedi.dev.qproposal.domain.ProposalVO" id="proposalInfoResultMap">
		<result column="PROP_SEQ" 					property="propSeq"/>
		<result column="PROP_NAME" 					property="propName"/>
		<result column="PROP_CATEGORY_CODE" 		property="propCategoryCode"/>
		<result column="PROP_TYPE_CODE" 			property="propTypeCode"/>
		<result column="PROP_PROBLEM" 				property="propProblem"/>
		<result column="PROP_IMPROVEMENT_CONT" 		property="propImprovementCont"/>
		<result column="PROP_BENEFIT" 				property="propBenefit"/>
		<result column="PROP_YEAR_EFFECT" 			property="propYearEffect"/>
		<result column="PROP_YEAR_EFFECT_CODE" 		property="propYearEffectCode"/>
		<result column="PROP_REL_MEMO_YN" 			property="propRelMemoYn"/>
		<result column="PROP_REL_MEMO_CODE" 		property="propRelMemoCode"/>
		<result column="PROP_REL_MEMO_CODE_NM"		property="propRelMemoCodeName"/>
		<result column="PROP_GROUP_NAME" 			property="propGroupName"/>
		<result column="PROP_BELT_CODE" 			property="propBeltCode"/>
		<result column="PROP_BIZ_PLACE_CODE" 		property="propBizPlaceCode"/>
		<result column="PROP_CIRCLE_CODE" 			property="propCircleCode"/>
		<result column="PROP_APPROVER_CODE" 		property="propApproverCode"/>
		<result column="PROP_PROP_STAT_CODE" 		property="propPropStatCode"/>
		<result column="PROP_EVAL_LV_CODE" 			property="propEvalLvCode"/>
		<result column="PROP_EVAL_SCORE" 			property="propEvalScore"/>
		<result column="PROP_EFFECT_SCORE" 			property="propEffectScore"/>
		<result column="PROP_SUBSIDY" 				property="propSubsidy"/>
		<result column="PROP_PAYMENT_YN" 			property="propPaymentYn"/>
		<result column="PROP_PAYMENT_DATE" 			property="propPaymentDate"/>
		<result column="PROP_DATE" 					property="propDate"/>
		<result column="PROP_PRACTICE_COMP_DATE" 	property="propPracticeCompDate"/>
		<result column="PROP_USER" 					property="propUser"/>
		<result column="PROP_REG_DATE" 				property="propRegDate"/>
		<result column="PROP_REG_USER" 				property="propRegUser"/>
		
		<result column="PROP_CATEGORY_CODE_NM" 		property="propCategoryCodeName"/>
		<result column="PROP_TYPE_CODE_NM" 			property="propTypeCodeName"/>
		<result column="PROP_YEAR_ERRECT_CODE_NM" 	property="propYearEffectCodeName"/>
		<result column="PROP_PROP_STAT_CODE_NM" 	property="propPropStatCodeName"/>
		<result column="PROP_EVAL_LV_CODE_NM" 		property="propEvalLvCodeName"/>
		<result column="PROP_USER_NM" 				property="propUserName"/>
		<result column="PROP_APPROVER_NM"			property="propApproverName"/>
		<result column="PROP_PAYMENT_YN_NM"			property="propPaymentYnName"/>
		<result column="PROP_CIRCLE_NM"				property="propCircleName"/>
		
		<result column="IDX"						property="idx"/>
	</resultMap>
	
	<sql id="selectForEvalClassProposalInfo">
		WITH PROPOSAL_MASTER AS (
            SELECT ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.PROP_SEQ) ASC ) IDX, ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.PROP_SEQ) DESC ) ROWIDX, T.*
            FROM(
				SELECT PROP_SEQ, PROP_NAME, PROP_CATEGORY_CODE, GET_CODE_NM('PPS_CTY', PROP_CATEGORY_CODE) AS PROP_CATEGORY_CODE_NM, 
					   PROP_TYPE_CODE, GET_CODE_NM('PPS_TYP', PROP_TYPE_CODE) AS PROP_TYPE_CODE_NM, PROP_PROBLEM, PROP_IMPROVEMENT_CONT,
					   PROP_BENEFIT, PROP_YEAR_EFFECT, PROP_YEAR_EFFECT_CODE, GET_CODE_NM('RESULTTY', PROP_YEAR_EFFECT_CODE) AS PROP_YEAR_ERRECT_CODE_NM,
					   PROP_REL_MEMO_YN, PROP_REL_MEMO_CODE, GET_PROP_NM(TO_NUMBER(PROP_REL_MEMO_CODE)) AS PROP_REL_MEMO_CODE_NM, 
					   PROP_GROUP_NAME, PROP_BELT_CODE, NVL(PROP_BIZ_PLACE_CODE, '-') AS PROP_BIZ_PLACE_CODE, 
					   NVL(PROP_CIRCLE_CODE, '-') AS PROP_CIRCLE_CODE, NVL(GET_CIRCLE_NM(PROP_CIRCLE_CODE), '-') AS PROP_CIRCLE_NM,
					   PROP_APPROVER_CODE, PROP_PROP_STAT_CODE, GET_CODE_NM('PPS_PRG', PROP_PROP_STAT_CODE) AS PROP_PROP_STAT_CODE_NM,
					   PROP_EVAL_SCORE, PROP_EVAL_LV_CODE, GET_CODE_NM('PPS_CLS', PROP_EVAL_LV_CODE) AS PROP_EVAL_LV_CODE_NM, 
					   PROP_EFFECT_SCORE, PROP_SUBSIDY, PROP_PAYMENT_YN, GET_CODE_NM('PMT_YN', PROP_PAYMENT_YN) AS PROP_PAYMENT_YN_NM, TO_CHAR(PROP_PAYMENT_DATE, 'YYYY-MM-DD') AS PROP_PAYMENT_DATE, 
				       TO_CHAR(PROP_DATE, 'YYYY-MM-DD') AS PROP_DATE, 
				       TO_CHAR(PROP_PRACTICE_COMP_DATE, 'YYYY-MM-DD') AS PROP_PRACTICE_COMP_DATE,
				       PROP_USER, GET_USER_NM(PROP_USER) AS PROP_USER_NM,
				       NVL(GET_USER_NM(PROP_APPROVER_CODE), '-') AS PROP_APPROVER_NM
				FROM TB_PROPOSAL_DETAIL	 
				WHERE PROP_PROP_STAT_CODE NOT IN ('PRG_1', 'PRG_2')
				<if test="searchPropFromDate != null and searchPropFromDate neq ''.toString() and searchPropToDate != null and searchPropToDate neq ''.toString()">
					AND PROP_DATE BETWEEN TO_DATE(#{searchPropFromDate}, 'YYYY-MM-DD') AND TO_DATE(#{searchPropToDate}, 'YYYY-MM-DD')
				</if>							
				<if test="searchPropCategoryCode != null and searchPropCategoryCode neq ''.toString()">
					AND PROP_CATEGORY_CODE = #{searchPropCategoryCode}
				</if>
				<if test="searchPropName != null and searchPropName neq ''.toString()">
					AND PROP_NAME LIKE '%'||#{searchPropName}||'%'
				</if>
				<if test="searchGroupName != null and searchGroupName neq ''.toString()">
					AND PROP_GROUP_NAME = #{searchGroupName}
				</if>
				<if test="searchBizPlaceCode != null and searchBizPlaceCode neq ''.toString()">
					AND PROP_BIZ_PLACE_CODE = #{searchBizPlaceCode}
				</if>
				<if test="searchPropUser != null and searchPropUser neq ''.toString()">
					AND PROP_USER = #{searchPropUser}
				</if>
				<if test="searchPropClassCode != null and searchPropClassCode neq ''.toString()">
					AND PROP_EVAL_LV_CODE = #{searchPropClassCode}
				</if>
				<if test="searchFinalEvalUser != null and searchFinalEvalUser neq ''.toString()">
					AND (
							SELECT COM_NO FROM 
							(
								SELECT 
									A.COM_NO AS COM_NO
									,B.REF_BUS_CODE AS REF_BUS_CODE
								FROM
									TB_APPROVAL_DETAIL A
									LEFT JOIN TB_APPROVAL_MST B
									ON  A.APROVAL_CODE = B.APROVAL_CODE 
									ORDER BY A.APROVAL_SEQ DESC
							) WHERE ROWNUM = 1
							AND REF_BUS_CODE = TB_PROPOSAL_DETAIL.PROP_SEQ
					) = #{searchFinalEvalUser}
				</if>
				<if test="searchPropTypeCode != null and searchPropTypeCode neq ''.toString()">
					AND PROP_TYPE_CODE = #{searchPropTypeCode}
				</if>
				
            ) T
		)
		SELECT T.*
		FROM PROPOSAL_MASTER T
	</sql>
	
	<sql id="selectEvalForClassProposalMasterInfoWithPaging">
		<include refid="selectForEvalClassProposalInfo"></include>
		WHERE T.ROWIDX BETWEEN (#{currentPageNo}*#{recordCountPerPage}+1-#{recordCountPerPage}) AND 
			  (#{currentPageNo}*#{recordCountPerPage})		  
		ORDER BY T.IDX DESC
	</sql>
	
	<select id="selectEvalForClassPoposalMasterInfo" resultMap="proposalInfoResultMap">
		<include refid="selectEvalForClassProposalMasterInfoWithPaging"></include>
	</select>
	
	<select id="selectForClassListCount" resultType="egovMap">
		SELECT COUNT(*) AS COUNT FROM (<include refid="selectForEvalClassProposalInfo"></include>)
	</select>
	
	<update id="updatePropEvalLvCode" parameterType="kr.freedi.dev.qproposal.domain.EvalProposalVO">
		UPDATE TB_PROPOSAL_DETAIL 
		SET 
			PROP_EVAL_LV_CODE = #{propEvalLvCode, jdbcType=VARCHAR}, 
			PROP_PROP_STAT_CODE = 'PRG_5',
			PROP_SUBSIDY = CASE WHEN #{propEvalLvCode, jdbcType=VARCHAR} = 'S' THEN NULL WHEN #{propEvalLvCode, jdbcType=VARCHAR} = 'NA' THEN NULL ELSE #{propSubsidy, jdbcType=VARCHAR} END 
		WHERE PROP_SEQ = #{propSeq}
	</update>
	
		<sql id="selectForEvalPaymentProposalInfo">
		WITH PROPOSAL_MASTER AS (
            SELECT ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.PROP_SEQ) ASC ) IDX, ROW_NUMBER() OVER( ORDER BY TO_NUMBER(T.PROP_SEQ) DESC ) ROWIDX, T.*
            FROM(
				SELECT PROP_SEQ, PROP_NAME, PROP_CATEGORY_CODE, GET_CODE_NM('PPS_CTY', PROP_CATEGORY_CODE) AS PROP_CATEGORY_CODE_NM, 
					   PROP_TYPE_CODE, GET_CODE_NM('PPS_TYP', PROP_TYPE_CODE) AS PROP_TYPE_CODE_NM, PROP_PROBLEM, PROP_IMPROVEMENT_CONT,
					   PROP_BENEFIT, PROP_YEAR_EFFECT, PROP_YEAR_EFFECT_CODE, GET_CODE_NM('RESULTTY', PROP_YEAR_EFFECT_CODE) AS PROP_YEAR_ERRECT_CODE_NM,
					   PROP_REL_MEMO_YN, PROP_REL_MEMO_CODE, GET_PROP_NM(TO_NUMBER(PROP_REL_MEMO_CODE)) AS PROP_REL_MEMO_CODE_NM, 
					   PROP_GROUP_NAME, PROP_BELT_CODE, NVL(PROP_BIZ_PLACE_CODE, '-') AS PROP_BIZ_PLACE_CODE, 
					   NVL(PROP_CIRCLE_CODE, '-') AS PROP_CIRCLE_CODE, NVL(GET_CIRCLE_NM(PROP_CIRCLE_CODE), '-') AS PROP_CIRCLE_NM,
					   PROP_APPROVER_CODE, PROP_PROP_STAT_CODE, GET_CODE_NM('PPS_PRG', PROP_PROP_STAT_CODE) AS PROP_PROP_STAT_CODE_NM,
					   PROP_EVAL_SCORE, PROP_EVAL_LV_CODE, GET_CODE_NM('PPS_CLS', PROP_EVAL_LV_CODE) AS PROP_EVAL_LV_CODE_NM, 
					   PROP_EFFECT_SCORE, PROP_SUBSIDY, PROP_PAYMENT_YN, GET_CODE_NM('PMT_YN', PROP_PAYMENT_YN) AS PROP_PAYMENT_YN_NM, TO_CHAR(PROP_PAYMENT_DATE, 'YYYY-MM-DD') AS PROP_PAYMENT_DATE, 
				       TO_CHAR(PROP_DATE, 'YYYY-MM-DD') AS PROP_DATE, 
				       TO_CHAR(PROP_PRACTICE_COMP_DATE, 'YYYY-MM-DD') AS PROP_PRACTICE_COMP_DATE,
				       PROP_USER, GET_USER_NM(PROP_USER) AS PROP_USER_NM,
				       NVL(GET_USER_NM(PROP_APPROVER_CODE), '-') AS PROP_APPROVER_NM
				FROM TB_PROPOSAL_DETAIL	 
				WHERE PROP_PROP_STAT_CODE NOT IN ('PRG_1', 'PRG_2', 'PRG_3', 'PRG_4') AND PROP_EVAL_LV_CODE NOT IN ('NA')
				<if test="searchPropFromDate != null and searchPropFromDate neq ''.toString() and searchPropToDate != null and searchPropToDate neq ''.toString()">
					AND PROP_DATE BETWEEN TO_DATE(#{searchPropFromDate}, 'YYYY-MM-DD') AND TO_DATE(#{searchPropToDate}, 'YYYY-MM-DD')
				</if>							
				<if test="searchPropCategoryCode != null and searchPropCategoryCode neq ''.toString()">
					AND PROP_CATEGORY_CODE = #{searchPropCategoryCode}
				</if>
				<if test="searchPropName != null and searchPropName neq ''.toString()">
					AND PROP_NAME LIKE '%'||#{searchPropName}||'%'
				</if>
				<if test="searchGroupName != null and searchGroupName neq ''.toString()">
					AND PROP_GROUP_NAME = #{searchGroupName}
				</if>
				<if test="searchBizPlaceCode != null and searchBizPlaceCode neq ''.toString()">
					AND PROP_BIZ_PLACE_CODE = #{searchBizPlaceCode}
				</if>
				<if test="searchPropUser != null and searchPropUser neq ''.toString() and searchUserTypeCode eq 'RU'">
					AND PROP_USER = #{searchPropUser}
				</if>
				<if test="searchPropUser != null and searchPropUser neq ''.toString() and searchUserTypeCode eq 'EU'">
					AND (
						SELECT COM_NO FROM 
						(
							SELECT 
								A.COM_NO AS COM_NO
								,B.REF_BUS_CODE AS REF_BUS_CODE
							FROM
								TB_APPROVAL_DETAIL A
								LEFT OUTER JOIN TB_APPROVAL_MST B
								ON  A.APROVAL_CODE = B.APROVAL_CODE 
								ORDER BY A.APROVAL_SEQ DESC
						) WHERE ROWNUM = 1
						AND REF_BUS_CODE = TB_PROPOSAL_DETAIL.PROP_SEQ
						) = #{searchPropUser}
				</if>
				<if test="searchPropClassCode != null and searchPropClassCode neq ''.toString()">
					AND PROP_EVAL_LV_CODE = #{searchPropClassCode}
				</if>
				<if test="searchPaymentCode != null and searchPaymentCode neq ''.toString()">
					AND PROP_PAYMENT_YN = #{searchPaymentCode}
				</if>
				
            ) T
		)
		SELECT T.*
		FROM PROPOSAL_MASTER T
	</sql>
	
	<sql id="selectEvalForPaymentProposalMasterInfoWithPaging">
		<include refid="selectForEvalPaymentProposalInfo"></include>
		WHERE T.ROWIDX BETWEEN (#{currentPageNo}*#{recordCountPerPage}+1-#{recordCountPerPage}) AND 
			  (#{currentPageNo}*#{recordCountPerPage})		  
		ORDER BY T.IDX DESC
	</sql>
	
	<select id="selectEvalForPaymentProposalMasterInfo" resultMap="proposalInfoResultMap">
		<include refid="selectEvalForPaymentProposalMasterInfoWithPaging"></include>
	</select>
	
	<select id="selectForPaymentListCount" resultType="egovMap">
		SELECT COUNT(*) AS COUNT FROM (<include refid="selectForEvalPaymentProposalInfo"></include>)
	</select>
	
	<update id="updatePropPaymentInfo" parameterType="kr.freedi.dev.qproposal.domain.EvalProposalVO">
		UPDATE TB_PROPOSAL_DETAIL 
		SET 
			PROP_PAYMENT_YN = #{propPaymentYn, jdbcType=VARCHAR}, 
			PROP_PAYMENT_DATE = SYSDATE, 
			PROP_PROP_STAT_CODE = 'PRG_6' 
		WHERE PROP_SEQ = #{propSeq}
	</update>
	
	<select id="selectSubsidyInfo" resultType="egovMap">
		SELECT GET_EV_SUSIDY(#{propEvalLvCode}) AS SUBSIDY FROM DUAL
	</select>
</mapper>